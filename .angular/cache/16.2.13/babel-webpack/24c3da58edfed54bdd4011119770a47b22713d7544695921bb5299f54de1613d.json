{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Course } from '../course';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../module.service\";\nimport * as i2 from \"../course.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"ngx-captcha\";\nfunction CreateCourseComponent_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const module_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    i0.ɵɵproperty(\"value\", module_r3.moduleId)(\"selected\", i_r4 === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(module_r3.moduleName);\n  }\n}\nexport class CreateCourseComponent {\n  constructor(moduleService, courseService, router, formBuilder) {\n    this.moduleService = moduleService;\n    this.courseService = courseService;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.course = new Course();\n    this.modules = [];\n    this.siteKey = \"\";\n  }\n  ngOnInit() {\n    this.aFormGroup = this.formBuilder.group({\n      recaptcha: ['', Validators.required]\n    });\n    this.loadModules();\n  }\n  loadModules() {\n    this.moduleService.getModulesList().subscribe(data => {\n      this.modules = data;\n      // Initialize course with the first module\n      if (this.modules.length > 0) {\n        this.course.module = this.modules[0];\n      }\n    }, error => {\n      console.log(error);\n    });\n  }\n  saveCourse() {\n    this.courseService.createCourse(this.course).subscribe(data => {\n      console.log(data);\n      this.goToCourseList();\n    }, error => console.log(error));\n  }\n  goToCourseList() {\n    this.router.navigate(['/courses']);\n  }\n  onSubmit() {\n    console.log(this.course);\n    this.saveCourse();\n  }\n  static #_ = this.ɵfac = function CreateCourseComponent_Factory(t) {\n    return new (t || CreateCourseComponent)(i0.ɵɵdirectiveInject(i1.ModuleService), i0.ɵɵdirectiveInject(i2.CourseService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateCourseComponent,\n    selectors: [[\"app-create-course\"]],\n    decls: 23,\n    vars: 7,\n    consts: [[1, \"col-md-6\", \"offset-md-3\"], [3, \"ngSubmit\"], [\"moduleForm\", \"ngForm\"], [1, \"form-group\"], [\"type\", \"text\", \"name\", \"courseName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"courseCode\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"moduleId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [3, \"formGroup\"], [\"formControlName\", \"recaptcha\", 3, \"siteKey\"], [\"captchaElem\", \"\"], [3, \"value\", \"selected\"]],\n    template: function CreateCourseComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n        i0.ɵɵtext(2, \"Create Course\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateCourseComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\");\n        i0.ɵɵtext(7, \"Course Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateCourseComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.course.courseName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\");\n        i0.ɵɵtext(11, \"Course Code\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateCourseComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.course.courseCode = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\");\n        i0.ɵɵtext(15, \"Module\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"select\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateCourseComponent_Template_select_ngModelChange_16_listener($event) {\n          return ctx.course.module.moduleId = $event;\n        });\n        i0.ɵɵtemplate(17, CreateCourseComponent_option_17_Template, 2, 3, \"option\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"button\", 8);\n        i0.ɵɵtext(19, \"Submit\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"form\", 9);\n        i0.ɵɵelement(21, \"ngx-recaptcha2\", 10, 11);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(4);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.course.courseName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.course.courseCode);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.course.module.moduleId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.modules);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !_r0.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.aFormGroup);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"siteKey\", ctx.siteKey);\n      }\n    },\n    dependencies: [i5.NgForOf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm, i4.FormGroupDirective, i4.FormControlName, i6.ReCaptcha2Component],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","Course","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","module_r3","moduleId","i_r4","ɵɵadvance","ɵɵtextInterpolate","moduleName","CreateCourseComponent","constructor","moduleService","courseService","router","formBuilder","course","modules","siteKey","ngOnInit","aFormGroup","group","recaptcha","required","loadModules","getModulesList","subscribe","data","length","module","error","console","log","saveCourse","createCourse","goToCourseList","navigate","onSubmit","_","ɵɵdirectiveInject","i1","ModuleService","i2","CourseService","i3","Router","i4","FormBuilder","_2","selectors","decls","vars","consts","template","CreateCourseComponent_Template","rf","ctx","ɵɵlistener","CreateCourseComponent_Template_form_ngSubmit_3_listener","CreateCourseComponent_Template_input_ngModelChange_8_listener","$event","courseName","CreateCourseComponent_Template_input_ngModelChange_12_listener","courseCode","CreateCourseComponent_Template_select_ngModelChange_16_listener","ɵɵtemplate","CreateCourseComponent_option_17_Template","ɵɵelement","_r0","valid"],"sources":["C:\\Users\\Administrator\\Desktop\\Angular\\angular-frontend\\src\\app\\create-course\\create-course.component.ts","C:\\Users\\Administrator\\Desktop\\Angular\\angular-frontend\\src\\app\\create-course\\create-course.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Course } from '../course';\nimport { CourseService } from '../course.service';\nimport { Module } from '../module';\nimport { ModuleService } from '../module.service';\n\n@Component({\n  selector: 'app-create-course',\n  templateUrl: './create-course.component.html',\n  styleUrls: ['./create-course.component.css']\n})\nexport class CreateCourseComponent implements OnInit {\n\n  protected aFormGroup!: FormGroup;\n  course: Course = new Course();\n  modules: Module[] = [];\n\n  constructor(private moduleService: ModuleService,\n              private courseService: CourseService,\n              private router: Router,\n              private formBuilder: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.aFormGroup = this.formBuilder.group({\n      recaptcha: ['', Validators.required]\n    });\n    this.loadModules();\n  }\n\n  siteKey:string = \"\"\n\n  loadModules() {\n    this.moduleService.getModulesList().subscribe(\n      (data: Module[]) => {\n        this.modules = data;\n        // Initialize course with the first module\n        if (this.modules.length > 0) {\n          this.course.module = this.modules[0];\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  saveCourse() {\n    this.courseService.createCourse(this.course).subscribe(data => {\n        console.log(data);\n        this.goToCourseList();\n      },\n      error => console.log(error));\n  }\n\n  goToCourseList() {\n    this.router.navigate(['/courses']);\n  }\n\n  onSubmit() {\n    console.log(this.course);\n    this.saveCourse();\n  }\n}\n","<div class=\"col-md-6 offset-md-3\">\n    <h3>Create Course</h3>\n    <form (ngSubmit)=\"onSubmit()\" #moduleForm=\"ngForm\">\n        <div class=\"form-group\">\n            <label>Course Name</label>\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"course.courseName\" name=\"courseName\">\n        </div>\n\n        <div class=\"form-group\">\n            <label>Course Code</label>\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"course.courseCode\" name=\"courseCode\">\n        </div>\n\n        <div class=\"form-group\">\n            <label>Module</label>\n            <select class=\"form-control\" [(ngModel)]=\"course.module.moduleId\" name=\"moduleId\">\n                <option *ngFor=\"let module of modules; let i = index\" [value]=\"module.moduleId\" [selected]=\"i === 0\">{{ module.moduleName }}</option>\n            </select>\n        </div>\n\n        <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"!moduleForm.valid\">Submit</button>\n    </form>\n    <form [formGroup]=\"aFormGroup\">\n        <ngx-recaptcha2 #captchaElem\n          [siteKey]=\"siteKey\"\n          formControlName=\"recaptcha\">\n        </ngx-recaptcha2>\n      </form>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}