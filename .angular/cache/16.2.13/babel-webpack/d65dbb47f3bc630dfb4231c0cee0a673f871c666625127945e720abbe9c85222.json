{"ast":null,"code":"import { Module } from '../module';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../module.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class UpdateModuleComponent {\n  constructor(moduleService, route, router) {\n    this.moduleService = moduleService;\n    this.route = route;\n    this.router = router;\n    this.module = new Module();\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.moduleId = +params['moduleId'];\n      console.log('moduleId:', this.moduleId);\n      if (!isNaN(this.moduleId)) {\n        this.moduleService.getModuleById(this.moduleId).subscribe(data => {\n          this.module = data;\n        }, error => {\n          console.log(error);\n        });\n      } else {\n        console.error('Invalid moduleId:', this.moduleId);\n      }\n    });\n  }\n  onSubmit() {\n    console.log('Submitting update for module:', this.module);\n    this.moduleService.updateModule(this.moduleId, this.module).subscribe(data => {\n      console.log('Update successful:', data);\n      this.goToModuleList();\n    }, error => console.error('Update failed:', error));\n  }\n  goToModuleList() {\n    this.router.navigate(['/modules']);\n  }\n  static #_ = this.ɵfac = function UpdateModuleComponent_Factory(t) {\n    return new (t || UpdateModuleComponent)(i0.ɵɵdirectiveInject(i1.ModuleService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateModuleComponent,\n    selectors: [[\"app-update-module\"]],\n    decls: 15,\n    vars: 3,\n    consts: [[1, \"col-md-6\", \"offset-md-3\"], [3, \"ngSubmit\"], [\"type\", \"hidden\", \"name\", \"moduleId\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"moduleName\", \"name\", \"moduleName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"description\", \"name\", \"description\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n    template: function UpdateModuleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n        i0.ɵɵtext(2, \" Update Module \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateModuleComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateModuleComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.module.moduleId = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\");\n        i0.ɵɵtext(7, \"Module Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateModuleComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.module.moduleName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\");\n        i0.ɵɵtext(11, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateModuleComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.module.description = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"button\", 6);\n        i0.ɵɵtext(14, \"Submit\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.module.moduleId);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.module.moduleName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.module.description);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Module","UpdateModuleComponent","constructor","moduleService","route","router","module","ngOnInit","params","subscribe","moduleId","console","log","isNaN","getModuleById","data","error","onSubmit","updateModule","goToModuleList","navigate","_","i0","ɵɵdirectiveInject","i1","ModuleService","i2","ActivatedRoute","Router","_2","selectors","decls","vars","consts","template","UpdateModuleComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","UpdateModuleComponent_Template_form_ngSubmit_3_listener","UpdateModuleComponent_Template_input_ngModelChange_4_listener","$event","UpdateModuleComponent_Template_input_ngModelChange_8_listener","moduleName","UpdateModuleComponent_Template_input_ngModelChange_12_listener","description","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Administrator\\Desktop\\Angular\\angular-frontend\\src\\app\\update-module\\update-module.component.ts","C:\\Users\\Administrator\\Desktop\\Angular\\angular-frontend\\src\\app\\update-module\\update-module.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Module } from '../module';\nimport { ModuleService } from '../module.service';\n\n@Component({\n  selector: 'app-update-module',\n  templateUrl: './update-module.component.html',\n  styleUrls: ['./update-module.component.css']\n})\nexport class UpdateModuleComponent implements OnInit {\n  moduleId!: number;\n  module: Module = new Module();\n  constructor(private moduleService: ModuleService,\n    private route: ActivatedRoute,\n    private router: Router) {}\n\n    ngOnInit(): void {\n      this.route.params.subscribe(params => {\n        this.moduleId = +params['moduleId']; \n        console.log('moduleId:', this.moduleId);\n        if (!isNaN(this.moduleId)) {\n          this.moduleService.getModuleById(this.moduleId).subscribe(\n            (data: Module) => {\n              this.module = data;\n            },\n            (error) => {\n              console.log(error);\n            }\n          );\n        } else {\n          console.error('Invalid moduleId:', this.moduleId);\n        }\n      });\n    }\n    \n    onSubmit() {\n      console.log('Submitting update for module:', this.module);\n      this.moduleService.updateModule(this.moduleId, this.module).subscribe(\n        data => {\n          console.log('Update successful:', data);\n          this.goToModuleList();\n        }, \n        error => console.error('Update failed:', error)\n      );\n    }\n\n  goToModuleList(){\n    this.router.navigate(['/modules']);\n  }\n\n}\n","<div class=\"col-md-6 offset-md-3\">\n    <h3> Update Module </h3>\n    <form (ngSubmit) = \"onSubmit()\">\n        <input type=\"hidden\" [(ngModel)]=\"module.moduleId\" name=\"moduleId\">\n        <div class=\"form-group\">\n            <label>Module Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"moduleName\"\n                [(ngModel)] = \"module.moduleName\" name=\"moduleName\">\n        </div>\n    \n        <div class=\"form-group\">\n            <label>Description</label>\n            <input type=\"text\" class=\"form-control\" id=\"description\"\n                [(ngModel)] = \"module.description\" name=\"description\">\n        </div>\n    \n        <button class=\"btn btn-success\" type=\"submit\">Submit</button>\n    </form>\n    </div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}