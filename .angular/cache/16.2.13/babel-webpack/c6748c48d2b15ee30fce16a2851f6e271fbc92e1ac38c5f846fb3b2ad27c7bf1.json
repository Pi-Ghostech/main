{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let CourseListComponent = class CourseListComponent {\n  constructor(courseService, router) {\n    this.courseService = courseService;\n    this.router = router;\n    this.fileContent = '';\n  }\n  ngOnInit() {\n    this.getCourses();\n  }\n  getCourses() {\n    this.courseService.getCoursesList().subscribe(data => {\n      this.courses = data;\n    });\n  }\n  updateCourse(courseId) {\n    this.router.navigate(['update-course', courseId]);\n  }\n  deleteCourse(courseId) {\n    this.courseService.deleteCourse(courseId).subscribe(data => {\n      console.log(data);\n      this.getCourses();\n    });\n  }\n  getFileUrl(attachmentFileName) {\n    return `http://localhost:8081/course/files/${attachmentFileName}`;\n  }\n  getFileContent(fileName) {\n    this.courseService.getFileContent(fileName).subscribe(data => {\n      this.fileContent = data;\n      const newWindow = window.open();\n      if (newWindow) {\n        newWindow.document.body.innerHTML = this.fileContent;\n      } else {\n        console.error('Failed to open new window');\n      }\n    });\n  }\n  getFileType(attachmentFileName) {\n    const extension = attachmentFileName.split('.').pop()?.toLowerCase();\n    if (extension === 'pdf') {\n      return 'pdf';\n    } else {\n      return 'text';\n    }\n  }\n};\nCourseListComponent = __decorate([Component({\n  selector: 'app-course-list',\n  templateUrl: './course-list.component.html',\n  styleUrls: ['./course-list.component.css']\n})], CourseListComponent);","map":{"version":3,"names":["Component","CourseListComponent","constructor","courseService","router","fileContent","ngOnInit","getCourses","getCoursesList","subscribe","data","courses","updateCourse","courseId","navigate","deleteCourse","console","log","getFileUrl","attachmentFileName","getFileContent","fileName","newWindow","window","open","document","body","innerHTML","error","getFileType","extension","split","pop","toLowerCase","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Administrator\\Desktop\\Angular\\angular-frontend\\src\\app\\course-list\\course-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Course } from '../course';\nimport { CourseService } from '../course.service';\n\n@Component({\n  selector: 'app-course-list',\n  templateUrl: './course-list.component.html',\n  styleUrls: ['./course-list.component.css']\n})\nexport class CourseListComponent implements OnInit{\n  courses!: Course[];\n  fileContent: string = '';\n\n  constructor(private courseService: CourseService,\n    private router: Router){}\n\n  ngOnInit(): void {\n    this.getCourses();\n  }\n\n  private getCourses(){\n    this.courseService.getCoursesList().subscribe(data => {\n      this.courses = data;\n    })\n  }\n\n  updateCourse(courseId: number){\n    this.router.navigate(['update-course',courseId]);\n  }\n\n  deleteCourse(courseId: number){\n    this.courseService.deleteCourse(courseId).subscribe( data => {\n      console.log(data);\n      this.getCourses();\n    })\n  }\n\n  getFileUrl(attachmentFileName: string): string {\n    return `http://localhost:8081/course/files/${attachmentFileName}`;\n  }\n\n  getFileContent(fileName: string) {\n    this.courseService.getFileContent(fileName).subscribe((data: string) => {\n      this.fileContent = data;\n      const newWindow = window.open();\n      if (newWindow) {\n        newWindow.document.body.innerHTML = this.fileContent;\n      } else {\n        console.error('Failed to open new window');\n      }\n    });\n  }\n  \n  getFileType(attachmentFileName: string): string {\n    const extension = attachmentFileName.split('.').pop()?.toLowerCase();\n    if (extension === 'pdf') {\n      return 'pdf';\n    } else {\n      return 'text';\n    }\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAI9BC,YAAoBC,aAA4B,EACtCC,MAAc;IADJ,KAAAD,aAAa,GAAbA,aAAa;IACvB,KAAAC,MAAM,GAANA,MAAM;IAHhB,KAAAC,WAAW,GAAW,EAAE;EAGE;EAE1BC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEQA,UAAUA,CAAA;IAChB,IAAI,CAACJ,aAAa,CAACK,cAAc,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MACnD,IAAI,CAACC,OAAO,GAAGD,IAAI;IACrB,CAAC,CAAC;EACJ;EAEAE,YAAYA,CAACC,QAAgB;IAC3B,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC,eAAe,EAACD,QAAQ,CAAC,CAAC;EAClD;EAEAE,YAAYA,CAACF,QAAgB;IAC3B,IAAI,CAACV,aAAa,CAACY,YAAY,CAACF,QAAQ,CAAC,CAACJ,SAAS,CAAEC,IAAI,IAAG;MAC1DM,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;MACjB,IAAI,CAACH,UAAU,EAAE;IACnB,CAAC,CAAC;EACJ;EAEAW,UAAUA,CAACC,kBAA0B;IACnC,OAAO,sCAAsCA,kBAAkB,EAAE;EACnE;EAEAC,cAAcA,CAACC,QAAgB;IAC7B,IAAI,CAAClB,aAAa,CAACiB,cAAc,CAACC,QAAQ,CAAC,CAACZ,SAAS,CAAEC,IAAY,IAAI;MACrE,IAAI,CAACL,WAAW,GAAGK,IAAI;MACvB,MAAMY,SAAS,GAAGC,MAAM,CAACC,IAAI,EAAE;MAC/B,IAAIF,SAAS,EAAE;QACbA,SAAS,CAACG,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAG,IAAI,CAACtB,WAAW;OACrD,MAAM;QACLW,OAAO,CAACY,KAAK,CAAC,2BAA2B,CAAC;;IAE9C,CAAC,CAAC;EACJ;EAEAC,WAAWA,CAACV,kBAA0B;IACpC,MAAMW,SAAS,GAAGX,kBAAkB,CAACY,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,EAAE,EAAEC,WAAW,EAAE;IACpE,IAAIH,SAAS,KAAK,KAAK,EAAE;MACvB,OAAO,KAAK;KACb,MAAM;MACL,OAAO,MAAM;;EAEjB;CAED;AArDY7B,mBAAmB,GAAAiC,UAAA,EAL/BlC,SAAS,CAAC;EACTmC,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,C,EACWpC,mBAAmB,CAqD/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}