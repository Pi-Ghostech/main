{"ast":null,"code":"import { Course } from '../course';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../course.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction UpdateCourseComponent_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const module_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵproperty(\"value\", module_r1.moduleId)(\"selected\", i_r2 === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(module_r1.moduleName);\n  }\n}\nexport class UpdateCourseComponent {\n  constructor(courseService, route, router) {\n    this.courseService = courseService;\n    this.route = route;\n    this.router = router;\n    this.course = new Course();\n    this.modules = [];\n  }\n  ngOnInit() {\n    this.courseId = this.route.snapshot.params[\"courseId\"];\n    this.courseService.getCourseById(this.courseId).subscribe(data => {\n      this.course = data;\n    }, error => console.log(error));\n    this.courseService.getModulesList().subscribe(modules => {\n      this.modules = modules;\n      if (this.course.module) {\n        const selectedModule = this.modules.find(module => module.moduleId === this.course.module.moduleId);\n        if (selectedModule) {\n          this.course.module = selectedModule;\n        }\n      }\n    }, error => console.log(error));\n  }\n  onSubmit() {\n    console.log('Submitting update for course:', this.course);\n    this.moduleService.updateModule(this.moduleId, this.module).subscribe(data => {\n      console.log('Update successful:', data);\n      this.goToModuleList();\n    }, error => console.error('Update failed:', error));\n  }\n  goToCourseList() {\n    this.router.navigate(['/courses']);\n  }\n  static #_ = this.ɵfac = function UpdateCourseComponent_Factory(t) {\n    return new (t || UpdateCourseComponent)(i0.ɵɵdirectiveInject(i1.CourseService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateCourseComponent,\n    selectors: [[\"app-update-course\"]],\n    decls: 19,\n    vars: 4,\n    consts: [[1, \"col-md-6\", \"offset-md-3\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"name\", \"courseName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"courseCode\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"moduleId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [3, \"value\", \"selected\"]],\n    template: function UpdateCourseComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n        i0.ɵɵtext(2, \"Create Course\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateCourseComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\");\n        i0.ɵɵtext(6, \"Course Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateCourseComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.course.courseName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\");\n        i0.ɵɵtext(10, \"Course Code\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateCourseComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.course.courseCode = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\");\n        i0.ɵɵtext(14, \"Module\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"select\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateCourseComponent_Template_select_ngModelChange_15_listener($event) {\n          return ctx.course.module.moduleId = $event;\n        });\n        i0.ɵɵtemplate(16, UpdateCourseComponent_option_16_Template, 2, 3, \"option\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"button\", 7);\n        i0.ɵɵtext(18, \"Submit\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.course.courseName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.course.courseCode);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.course.module.moduleId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.modules);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Course","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","module_r1","moduleId","i_r2","ɵɵadvance","ɵɵtextInterpolate","moduleName","UpdateCourseComponent","constructor","courseService","route","router","course","modules","ngOnInit","courseId","snapshot","params","getCourseById","subscribe","data","error","console","log","getModulesList","module","selectedModule","find","onSubmit","moduleService","updateModule","goToModuleList","goToCourseList","navigate","_","ɵɵdirectiveInject","i1","CourseService","i2","ActivatedRoute","Router","_2","selectors","decls","vars","consts","template","UpdateCourseComponent_Template","rf","ctx","ɵɵlistener","UpdateCourseComponent_Template_form_ngSubmit_3_listener","UpdateCourseComponent_Template_input_ngModelChange_7_listener","$event","courseName","UpdateCourseComponent_Template_input_ngModelChange_11_listener","courseCode","UpdateCourseComponent_Template_select_ngModelChange_15_listener","ɵɵtemplate","UpdateCourseComponent_option_16_Template"],"sources":["C:\\Users\\Administrator\\Desktop\\Angular\\angular-frontend\\src\\app\\update-course\\update-course.component.ts","C:\\Users\\Administrator\\Desktop\\Angular\\angular-frontend\\src\\app\\update-course\\update-course.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Course } from '../course';\nimport { CourseService } from '../course.service';\nimport { Module } from '../module';\n\n@Component({\n  selector: 'app-update-course',\n  templateUrl: './update-course.component.html',\n  styleUrls: ['./update-course.component.css']\n})\nexport class UpdateCourseComponent implements OnInit{\n\n  courseId!: number;\n  course: Course = new Course();\n  modules: Module[] = [];\n  constructor(private courseService: CourseService,\n    private route: ActivatedRoute,\n    private router: Router){}\n\n    ngOnInit(): void {\n      this.courseId = this.route.snapshot.params[\"courseId\"];\n      \n      this.courseService.getCourseById(this.courseId).subscribe(data => {\n        this.course = data;\n      }, error => console.log(error));\n      \n      this.courseService.getModulesList().subscribe(modules => {\n        this.modules = modules;\n        \n        if (this.course.module) {\n          const selectedModule = this.modules.find(module => module.moduleId === this.course.module.moduleId);\n          if (selectedModule) {\n            this.course.module = selectedModule;\n          }\n        }\n      }, error => console.log(error));\n    }\n\n    onSubmit() {\n      console.log('Submitting update for course:', this.course);\n      this.moduleService.updateModule(this.moduleId, this.module).subscribe(\n        data => {\n          console.log('Update successful:', data);\n          this.goToModuleList();\n        }, \n        error => console.error('Update failed:', error)\n      );\n    }\n\n  goToCourseList() {\n    this.router.navigate(['/courses']);\n  }\n\n}\n","<div class=\"col-md-6 offset-md-3\">\n    <h3>Create Course</h3>\n    <form (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n            <label>Course Name</label>\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"course.courseName\" name=\"courseName\">\n        </div>\n\n        <div class=\"form-group\">\n            <label>Course Code</label>\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"course.courseCode\" name=\"courseCode\">\n        </div>\n\n        <div class=\"form-group\">\n            <label>Module</label>\n            <select class=\"form-control\" [(ngModel)]=\"course.module.moduleId\" name=\"moduleId\">\n                <option *ngFor=\"let module of modules; let i = index\" [value]=\"module.moduleId\" [selected]=\"i === 0\">{{ module.moduleName }}</option>\n            </select>\n        </div>\n\n        <button class=\"btn btn-success\" type=\"submit\">Submit</button>\n    </form>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}